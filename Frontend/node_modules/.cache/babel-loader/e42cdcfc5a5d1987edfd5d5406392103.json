{"ast":null,"code":"var _jsxFileName = \"/Users/alpcan/Desktop/vscode-workspace/reactjs_practice/working-diary/src/components/WorkDay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AddWorkingPiece from './AddWorkingPiece';\nimport WorkPiece from './WorkPiece';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WorkDay = ({\n  id,\n  header,\n  handleDeleteWorkingDay,\n  timePeriodList\n}) => {\n  _s();\n\n  const [isVisible, setIsVisible] = useState(false);\n  const [workingPieces, setWorkingPieces] = useState([]);\n\n  const handleAddWorkingPiece = (header, context, timePeriod) => {\n    const formattedDate = belongerDiary.date;\n    const newWorkingPiece = {\n      id: nanoid(),\n      header: header,\n      context: context,\n      timePeriod: timePeriod,\n      date: formattedDate\n    };\n    const newWorkingPieces = [...workingPieces, newWorkingPiece];\n    setWorkingDiaries(newWorkingPieces);\n  };\n\n  const handleDeleteWorkingPiece = id => {\n    const newWorkingPieces = workingPieces.filter(workingPiece => id !== workingPiece.id);\n    setWorkingPieces(newWorkingPieces);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: id,\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            id: \"header\",\n            className: \"d-inline\",\n            style: {\n              cursor: \"pointer\"\n            },\n            onClick: setIsVisible(!isVisible),\n            children: header\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: handleDeleteWorkingDay(id),\n            className: \"far fa-trash-alt\",\n            style: {\n              cursor: \"pointer\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"new-working-piece-button\",\n            className: \"btn btn-primary\",\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#addWorkingPiece\",\n            toggle: \"modal\",\n            type: \"button\",\n            children: \"Yeni Bir \\u0130\\u015F Par\\xE7as\\u0131 Ekle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this), isVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: workingPieces.map(workingPiece => /*#__PURE__*/_jsxDEV(WorkPiece, {\n          id: workingPiece.id,\n          header: workingPiece.header,\n          context: workingPiece.context,\n          date: workingPiece.date,\n          timePeriod: workingPiece.timePeriod,\n          handleDeleteWorkingPiece: handleDeleteWorkingPiece,\n          handleAddWorkingPiece: handleAddWorkingPiece\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this) : null, /*#__PURE__*/_jsxDEV(AddWorkingPiece, {\n        timePeriodList: timePeriodList,\n        belongerId: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 14\n  }, this);\n};\n\n_s(WorkDay, \"3f2mQ/SPAFUVhVYe+V4vQjr9UH8=\");\n\n_c = WorkDay;\nexport default WorkDay;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkDay\");","map":{"version":3,"sources":["/Users/alpcan/Desktop/vscode-workspace/reactjs_practice/working-diary/src/components/WorkDay.js"],"names":["React","useState","AddWorkingPiece","WorkPiece","WorkDay","id","header","handleDeleteWorkingDay","timePeriodList","isVisible","setIsVisible","workingPieces","setWorkingPieces","handleAddWorkingPiece","context","timePeriod","formattedDate","belongerDiary","date","newWorkingPiece","nanoid","newWorkingPieces","setWorkingDiaries","handleDeleteWorkingPiece","filter","workingPiece","cursor","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport AddWorkingPiece from './AddWorkingPiece';\nimport WorkPiece from './WorkPiece';\n\nconst WorkDay = ({id,header,handleDeleteWorkingDay,timePeriodList}) => {\n\n\n    const [isVisible, setIsVisible] = useState(false);\n    const [workingPieces, setWorkingPieces] = useState([]);\n\n    const handleAddWorkingPiece = (header,context,timePeriod) => {\n    \n        const formattedDate = belongerDiary.date;\n        const newWorkingPiece = {\n          id: nanoid(),\n          header: header,\n          context: context,\n          timePeriod : timePeriod,\n          date: formattedDate,\n        }\n        const newWorkingPieces = [...workingPieces, newWorkingPiece];\n        setWorkingDiaries(newWorkingPieces);\n      }\n    \n      const handleDeleteWorkingPiece = (id) => {\n        \n        const newWorkingPieces = workingPieces.filter((workingPiece) => id !== workingPiece.id);\n        setWorkingPieces(newWorkingPieces);\n    \n      }\n\n        return (\n\n             <div className=\"row mt-4\">\n                    <div id={id} className=\"card\">\n                    \n                        <div className=\"card-header d-flex justify-content-between\">\n                            <div className=\"row\">\n                                <h5 id=\"header\" className=\"d-inline\" style={{cursor:\"pointer\"}} onClick={setIsVisible(!isVisible)}>{header}</h5>\n                                <i onClick = {handleDeleteWorkingDay(id)} className=\"far fa-trash-alt\" style = {{cursor:\"pointer\"}}></i>\n                            </div>\n                            <div className=\"row\">\n                                <button id=\"new-working-piece-button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#addWorkingPiece\" toggle=\"modal\" type=\"button\" >Yeni Bir İş Parçası Ekle</button>\n                            </div>\n                       </div>\n                        {\n                        isVisible ? \n                        <div className=\"card-body\">\n                                {workingPieces.map((workingPiece) => (\n                                    <WorkPiece\n                                        id = {workingPiece.id}\n                                        header ={workingPiece.header}\n                                        context = {workingPiece.context}\n                                        date = {workingPiece.date}\n                                        timePeriod = {workingPiece.timePeriod}\n                                        handleDeleteWorkingPiece = {handleDeleteWorkingPiece}\n                                        handleAddWorkingPiece = {handleAddWorkingPiece}\n                                    />\n                                ))} \n                        \n                        </div> : null\n                        }\n                        <AddWorkingPiece \n                            timePeriodList = {timePeriodList}\n                            belongerId = {id}\n                        />\n                    </div>\n            </div>\n            \n        )\n    }\nexport default WorkDay;"]},"metadata":{},"sourceType":"module"}