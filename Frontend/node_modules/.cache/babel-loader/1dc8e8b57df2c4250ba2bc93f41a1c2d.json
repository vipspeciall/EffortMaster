{"ast":null,"code":"var _jsxFileName = \"/Users/alpcan/Desktop/vscode-workspace/reactjs_practice/working-diary/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //import $ from 'jquery';\n\nimport { nanoid } from 'nanoid';\nimport Search from './components/Search';\nimport DiaryList from './components/DiaryList';\nimport AddWorkingDiary from './components/AddWorkingDiary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [workingDiaries, setWorkingDiaries] = useState([{\n    id: \"1\",\n    header: \"Örnek Bir Günlük Başlığı\",\n    date: \"19.09.2021\",\n    workingpieces: {\n      id: \"1\",\n      header: \"Örnek Bir İş Parçası Başlığı\",\n      context: \"Bu bir örnek iş parçası içeriğidir\",\n      date: \"19.09.2021\",\n      timeperiod: 10\n    }\n  }]);\n  const [lookingOnDate, setLookingOnDate] = useState('');\n  const [searchText, setSearchText] = useState('');\n  const [isWorkingDayVisible, setIsWorkingDayVisible] = useState(false);\n  const [timePeriodList] = useState({\n    0: \"00:00 - 01:00\",\n    1: \"01:00 - 02:00\",\n    2: \"02:00 - 03:00\",\n    3: \"03:00 - 04:00\",\n    4: \"04:00 - 05:00\",\n    5: \"05:00 - 06:00\",\n    6: \"06:00 - 07:00\",\n    7: \"07:00 - 08:00\",\n    8: \"08:00 - 09:00\",\n    9: \"09:00 - 10:00\",\n    10: \"10:00 - 11:00\",\n    11: \"11:00 - 12:00\",\n    12: \"12:00 - 13:00\",\n    13: \"13:00 - 14:00\",\n    14: \"14:00 - 15:00\",\n    15: \"15:00 - 16:00\",\n    16: \"16:00 - 17:00\",\n    17: \"17:00 - 18:00\",\n    18: \"18:00 - 19:00\",\n    19: \"19:00 - 20:00\",\n    20: \"20:00 - 21:00\",\n    21: \"21:00 - 22:00\",\n    22: \"22:00 - 23:00\",\n    23: \"23:00 - 00:00\"\n  });\n\n  const setWorkingDayVisibility = () => {\n    setIsWorkingDayVisible(true);\n  };\n\n  const handleAddWorkingPiece = (belongerId, header, context, timePeriod) => {\n    const inheritedDate = date;\n    const newWorkingPiece = {\n      id: nanoid(),\n      header: header,\n      context: context,\n      timePeriod: timePeriod,\n      date: inheritedDate\n    };\n    const newWorkingPieces = [...workingPieces, newWorkingPiece];\n    setWorkingPieces(newWorkingPieces);\n  };\n\n  const handleDeleteWorkingPiece = id => {\n    const newWorkingPieces = workingPieces.filter(workingPiece => id !== workingPiece.id);\n    setWorkingPieces(newWorkingPieces);\n  }; // $.getJSON(\"localhost:8080/getDiaries\",function (data){\n  //   this.setState({\n  //     workingDairies : data\n  //   })\n  // });\n  // const fetchDatas = () => {\n  //   fetch(\"http://localhost:8080/getDiaries\",{ mode: 'cors' })\n  //   .then((response) => { \n  //     var pulledData = response.json();\n  //     console.log(pulledData);\n  //     setWorkingDiaries(pulledData);\n  //     return pulledData})\n  //   console.log($('.date').val());\n  // }\n  // const pageOnLoad = () =>{\n  //   //fetchDatas();\n  // }\n  // document.getElementsByTagName(\"body\")[0].addEventListener(\"onload\",pageOnLoad);\n\n\n  const handleAddWorkingDiary = (header, date) => {\n    const formattedDate = new Date(date).toLocaleDateString();\n    const newWorkingDiary = {\n      id: nanoid(),\n      header: header,\n      date: formattedDate,\n      workingPieces: []\n    };\n    const newWorkingDiaries = [...workingDiaries, newWorkingDiary];\n    setWorkingDiaries(newWorkingDiaries);\n  };\n\n  const handleDeleteWorkingDiary = id => {\n    const newWorkinDiary = workingDiaries.filter(workingDiary => id !== workingDiary.id);\n    setWorkingDiaries(newWorkinDiary);\n  };\n\n  const chooseDate = date => {\n    setLookingOnDate(new Date(date).toLocaleDateString());\n  };\n\n  const handleSearchDiary = searchText => {\n    setSearchText(searchText);\n  }; // const chooseDate = () =>{\n  //   var date = new Date($('.date').val());\n  //   var formattedDate = date.toLocaleDateString();\n  //   setLookingOnDate({\n  //     lookingOnDate : formattedDate\n  //   })\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"app-header\",\n        className: \"text-center mt-4\",\n        children: \"EFFORT MASTER'A HO\\u015EGELD\\u0130N\\u0130Z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      chooseDate: chooseDate,\n      handleSearchDiary: handleSearchDiary,\n      searchText: searchText,\n      lookingOnDate: lookingOnDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-diary row mt-4 justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-diary-button\",\n        className: \"btn btn-primary\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#addDiary\",\n        toggle: \"modal\",\n        type: \"button\",\n        children: \"Yeni Bir G\\xFCn Ekle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      workingDiaries: workingDiaries,\n      timePeriodList: timePeriodList,\n      isWorkingDayVisible: isWorkingDayVisible,\n      handleDeleteWorkingDay: handleDeleteWorkingDiary,\n      handleAddWorkingPiece: handleAddWorkingPiece,\n      handleDeleteWorkingPiece: handleDeleteWorkingPiece,\n      setWorkingDayVisibility: setWorkingDayVisibility\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddWorkingDiary, {\n      handleAddWorkingDiary: handleAddWorkingDiary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"0fRANy5XGCmB8InCS49YBjcU0qM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alpcan/Desktop/vscode-workspace/reactjs_practice/working-diary/src/App.js"],"names":["React","useState","nanoid","Search","DiaryList","AddWorkingDiary","App","workingDiaries","setWorkingDiaries","id","header","date","workingpieces","context","timeperiod","lookingOnDate","setLookingOnDate","searchText","setSearchText","isWorkingDayVisible","setIsWorkingDayVisible","timePeriodList","setWorkingDayVisibility","handleAddWorkingPiece","belongerId","timePeriod","inheritedDate","newWorkingPiece","newWorkingPieces","workingPieces","setWorkingPieces","handleDeleteWorkingPiece","filter","workingPiece","handleAddWorkingDiary","formattedDate","Date","toLocaleDateString","newWorkingDiary","newWorkingDiaries","handleDeleteWorkingDiary","newWorkinDiary","workingDiary","chooseDate","handleSearchDiary"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n//import $ from 'jquery';\nimport {nanoid} from 'nanoid';\nimport Search from './components/Search';\nimport DiaryList from './components/DiaryList';\nimport AddWorkingDiary from './components/AddWorkingDiary';\n\n\n  \n\n \n\nconst App = () => {\n\n  \n  const [workingDiaries, setWorkingDiaries] = useState([\n    {\n      id: \"1\",\n      header: \"Örnek Bir Günlük Başlığı\",\n      date: \"19.09.2021\",\n      workingpieces: {\n          id: \"1\",\n          header: \"Örnek Bir İş Parçası Başlığı\",\n          context: \"Bu bir örnek iş parçası içeriğidir\",\n          date: \"19.09.2021\",\n          timeperiod: 10\n\n      }\n    }\n  ]);\n  const [lookingOnDate, setLookingOnDate] = useState('')\n  const [searchText, setSearchText] = useState('');\n  const [isWorkingDayVisible, setIsWorkingDayVisible] = useState(false);\n  const [timePeriodList] = useState(\n    {\n      0: \"00:00 - 01:00\",\n      1: \"01:00 - 02:00\",\n      2: \"02:00 - 03:00\",\n      3: \"03:00 - 04:00\",\n      4: \"04:00 - 05:00\",\n      5: \"05:00 - 06:00\",\n      6: \"06:00 - 07:00\",\n      7: \"07:00 - 08:00\",\n      8: \"08:00 - 09:00\",\n      9: \"09:00 - 10:00\",\n      10: \"10:00 - 11:00\",\n      11: \"11:00 - 12:00\",\n      12: \"12:00 - 13:00\",\n      13: \"13:00 - 14:00\",\n      14: \"14:00 - 15:00\",\n      15: \"15:00 - 16:00\",\n      16: \"16:00 - 17:00\",\n      17: \"17:00 - 18:00\",\n      18: \"18:00 - 19:00\",\n      19: \"19:00 - 20:00\",\n      20: \"20:00 - 21:00\",\n      21: \"21:00 - 22:00\",\n      22: \"22:00 - 23:00\",\n      23: \"23:00 - 00:00\"\n    }\n  );\n  const setWorkingDayVisibility = () => {\n    setIsWorkingDayVisible(true);\n  } \n  const handleAddWorkingPiece = (belongerId, header,context,timePeriod) => {\n    \n    const inheritedDate = date;\n    const newWorkingPiece = {\n      id: nanoid(),\n      header: header,\n      context: context,\n      timePeriod : timePeriod,\n      date: inheritedDate,\n    }\n    const newWorkingPieces = [...workingPieces, newWorkingPiece];\n    setWorkingPieces(newWorkingPieces);\n  }\n\n  const handleDeleteWorkingPiece = (id) => {\n    \n    const newWorkingPieces = workingPieces.filter((workingPiece) => id !== workingPiece.id);\n    setWorkingPieces(newWorkingPieces);\n\n  }\n\n  // $.getJSON(\"localhost:8080/getDiaries\",function (data){\n  //   this.setState({\n  //     workingDairies : data\n  //   })\n  // });\n\n  // const fetchDatas = () => {\n\n  //   fetch(\"http://localhost:8080/getDiaries\",{ mode: 'cors' })\n  //   .then((response) => { \n  //     var pulledData = response.json();\n  //     console.log(pulledData);\n  //     setWorkingDiaries(pulledData);\n  //     return pulledData})\n  //   console.log($('.date').val());\n\n  // }\n\n  // const pageOnLoad = () =>{\n\n  //   //fetchDatas();\n\n  // }\n\n  // document.getElementsByTagName(\"body\")[0].addEventListener(\"onload\",pageOnLoad);\n\n  const handleAddWorkingDiary = (header,date) => {\n    const formattedDate = new Date(date).toLocaleDateString();\n    const newWorkingDiary = {\n      id: nanoid(),\n      header: header,\n      date: formattedDate,\n      workingPieces: []\n    }\n    const newWorkingDiaries = [...workingDiaries, newWorkingDiary];\n    setWorkingDiaries(newWorkingDiaries);    \n  }\n\n  \n  const handleDeleteWorkingDiary = (id) => {\n\n    const newWorkinDiary = workingDiaries.filter((workingDiary) => id !== workingDiary.id);\n    setWorkingDiaries(newWorkinDiary);\n\n  }\n\n  const chooseDate = (date) => {\n\n    setLookingOnDate(new Date(date).toLocaleDateString());\n  }\n  const handleSearchDiary = (searchText) => {\n\n    setSearchText(searchText);\n\n  }\n  // const chooseDate = () =>{\n  //   var date = new Date($('.date').val());\n  //   var formattedDate = date.toLocaleDateString();\n\n  //   setLookingOnDate({\n  //     lookingOnDate : formattedDate\n  //   })\n  // }\n\n  \n    return (\n      <div className=\"container\">\n        <div className=\"header\">\n          <h3 id=\"app-header\" className=\"text-center mt-4\">EFFORT MASTER'A HOŞGELDİNİZ</h3>\n        </div>\n            <Search \n                chooseDate = {chooseDate}\n                handleSearchDiary = {handleSearchDiary}\n                searchText = {searchText}\n                lookingOnDate = {lookingOnDate}\n            />\n            <div className=\"add-diary row mt-4 justify-content-center\">\n              <button id=\"new-diary-button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#addDiary\" toggle=\"modal\" type=\"button\" >Yeni Bir Gün Ekle</button>\n            </div>  \n            <DiaryList\n\n                workingDiaries = {workingDiaries}\n                timePeriodList = {timePeriodList}\n                isWorkingDayVisible = {isWorkingDayVisible}\n\n                handleDeleteWorkingDay = {handleDeleteWorkingDiary}\n                handleAddWorkingPiece = {handleAddWorkingPiece}\n                handleDeleteWorkingPiece = {handleDeleteWorkingPiece}\n                setWorkingDayVisibility = {setWorkingDayVisibility}\n\n            />\n            \n            <AddWorkingDiary\n              handleAddWorkingDiary = {handleAddWorkingDiary}\n              /> \n\n          \n\n      </div>\n    )\n  }\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}