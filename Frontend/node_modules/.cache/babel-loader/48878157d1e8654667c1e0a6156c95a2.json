{"ast":null,"code":"var _jsxFileName = \"/Users/alpcan/Desktop/vscode-workspace/reactjs_practice/working-diary/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport $ from 'jquery';\nimport { nanoid } from 'nanoid';\nimport Search from './components/Search';\nimport DiaryList from './components/DiaryList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [workingDairies, setWorkingDiaries] = useState([]); //const [workingPieces, setWorkingPieces] = useState('');\n\n  const [lookingOnDate, setLookingOnDate] = useState('');\n  const [searchText, setSearchText] = useState(''); // $.getJSON(\"localhost:8080/getDiaries\",function (data){\n  //   this.setState({\n  //     workingDairies : data\n  //   })\n  // });\n\n  const fetchDatas = () => {\n    fetch(\"http://localhost:8080/getDiaries\", {\n      mode: 'cors'\n    }).then(response => {\n      var pulledData = response.json();\n      console.log(pulledData);\n      setWorkingDiaries(pulledData);\n      return pulledData;\n    });\n    console.log($('.date').val());\n  };\n\n  document.getElementsByTagName(\"body\")[0].addEventListener(\"onload\", fetchDatas);\n\n  const addWorkingDairy = (header, date) => {\n    const formattedDate = new Date(date).toLocaleDateString();\n    const newWorkingDairy = {\n      id: nanoid(),\n      header: header,\n      date: formattedDate,\n      workingPieces: {}\n    };\n    const newWorkingDiaries = [...workingDairies, newWorkingDairy];\n    setWorkingDiaries(newWorkingDiaries);\n  }; // const chooseDate = () =>{\n  //   var date = new Date($('.date').val());\n  //   var formattedDate = date.toLocaleDateString();\n  //   setLookingOnDate({\n  //     lookingOnDate : formattedDate\n  //   })\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center mt-4\",\n        children: \"CHOOSE A DAY AND SEARCH WITH KEYWORDS IN YOUR DAILIES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      chooseDate: setLookingOnDate,\n      handleSearchDaily: setSearchText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-diary row mt-4 justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"Yeni Bir G\\xFCn Ekle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      workingDairies: workingDairies.filter(workingDairy => workingDairy.header.toLowerCase().includes(searchText.toLowerCase())),\n      handleAddWorkingDairy: addWorkingDairy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"Z1LpsM95fbpqbNhBJxdNXL7H6Uo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alpcan/Desktop/vscode-workspace/reactjs_practice/working-diary/src/App.js"],"names":["React","useState","$","nanoid","Search","DiaryList","App","workingDairies","setWorkingDiaries","lookingOnDate","setLookingOnDate","searchText","setSearchText","fetchDatas","fetch","mode","then","response","pulledData","json","console","log","val","document","getElementsByTagName","addEventListener","addWorkingDairy","header","date","formattedDate","Date","toLocaleDateString","newWorkingDairy","id","workingPieces","newWorkingDiaries","filter","workingDairy","toLowerCase","includes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAOA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAGhB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD,CAHgB,CAIhB;;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C,CANgB,CAQhB;AACA;AACA;AACA;AACA;;AAEA,QAAMY,UAAU,GAAG,MAAM;AAEvBC,IAAAA,KAAK,CAAC,kCAAD,EAAoC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAApC,CAAL,CACCC,IADD,CACOC,QAAD,IAAc;AAClB,UAAIC,UAAU,GAAGD,QAAQ,CAACE,IAAT,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACAV,MAAAA,iBAAiB,CAACU,UAAD,CAAjB;AACA,aAAOA,UAAP;AAAkB,KALpB;AAMAE,IAAAA,OAAO,CAACC,GAAR,CAAYnB,CAAC,CAAC,OAAD,CAAD,CAAWoB,GAAX,EAAZ;AAED,GAVD;;AAWAC,EAAAA,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,gBAAzC,CAA0D,QAA1D,EAAmEZ,UAAnE;;AAEA,QAAMa,eAAe,GAAG,CAACC,MAAD,EAAQC,IAAR,KAAiB;AACvC,UAAMC,aAAa,GAAG,IAAIC,IAAJ,CAASF,IAAT,EAAeG,kBAAf,EAAtB;AACA,UAAMC,eAAe,GAAG;AACtBC,MAAAA,EAAE,EAAE9B,MAAM,EADY;AAEtBwB,MAAAA,MAAM,EAAEA,MAFc;AAGtBC,MAAAA,IAAI,EAAEC,aAHgB;AAItBK,MAAAA,aAAa,EAAE;AAJO,KAAxB;AAMA,UAAMC,iBAAiB,GAAG,CAAC,GAAG5B,cAAJ,EAAoByB,eAApB,CAA1B;AACAxB,IAAAA,iBAAiB,CAAC2B,iBAAD,CAAjB;AACD,GAVD,CA3BgB,CAwChB;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAII,QAAC,MAAD;AACI,MAAA,UAAU,EAAIzB,gBADlB;AAEI,MAAA,iBAAiB,EAAIE;AAFzB;AAAA;AAAA;AAAA;AAAA,YAJJ,eAQI;AAAK,MAAA,SAAS,EAAC,2CAAf;AAAA,6BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARJ,eAWI,QAAC,SAAD;AACI,MAAA,cAAc,EACZL,cAAc,CAAC6B,MAAf,CAAuBC,YAAD,IAAkBA,YAAY,CAACV,MAAb,CAAoBW,WAApB,GAAkCC,QAAlC,CAA2C5B,UAAU,CAAC2B,WAAX,EAA3C,CAAxC,CAFN;AAII,MAAA,qBAAqB,EAAIZ;AAJ7B;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAtEH;;GAAMpB,G;;KAAAA,G;AA0EN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport $ from 'jquery';\nimport {nanoid} from 'nanoid';\nimport Search from './components/Search';\nimport DiaryList from './components/DiaryList';\n\n\n  \n\n \n\nconst App = () => {\n\n  \n  const [workingDairies, setWorkingDiaries] = useState([]);\n  //const [workingPieces, setWorkingPieces] = useState('');\n  const [lookingOnDate, setLookingOnDate] = useState('')\n  const [searchText, setSearchText] = useState('');\n\n  // $.getJSON(\"localhost:8080/getDiaries\",function (data){\n  //   this.setState({\n  //     workingDairies : data\n  //   })\n  // });\n\n  const fetchDatas = () => {\n\n    fetch(\"http://localhost:8080/getDiaries\",{ mode: 'cors' })\n    .then((response) => { \n      var pulledData = response.json();\n      console.log(pulledData);\n      setWorkingDiaries(pulledData);\n      return pulledData})\n    console.log($('.date').val());\n\n  }\n  document.getElementsByTagName(\"body\")[0].addEventListener(\"onload\",fetchDatas);\n\n  const addWorkingDairy = (header,date) => {\n    const formattedDate = new Date(date).toLocaleDateString();\n    const newWorkingDairy = {\n      id: nanoid(),\n      header: header,\n      date: formattedDate,\n      workingPieces: {}\n    }\n    const newWorkingDiaries = [...workingDairies, newWorkingDairy];\n    setWorkingDiaries(newWorkingDiaries);    \n  }\n\n  \n  // const chooseDate = () =>{\n  //   var date = new Date($('.date').val());\n  //   var formattedDate = date.toLocaleDateString();\n\n  //   setLookingOnDate({\n  //     lookingOnDate : formattedDate\n  //   })\n  // }\n\n  \n    return (\n      <div className=\"container\">\n      <div className=\"header\">\n        <h3 className=\"text-center mt-4\">CHOOSE A DAY AND SEARCH WITH KEYWORDS IN YOUR DAILIES</h3>\n      </div>\n          <Search \n              chooseDate = {setLookingOnDate}\n              handleSearchDaily = {setSearchText}\n          />\n          <div className=\"add-diary row mt-4 justify-content-center\">\n            <button type=\"button\" >Yeni Bir GÃ¼n Ekle</button>\n          </div>  \n          <DiaryList \n              workingDairies = {\n                workingDairies.filter((workingDairy) => workingDairy.header.toLowerCase().includes(searchText.toLowerCase())\n                  )}\n              handleAddWorkingDairy = {addWorkingDairy}\n          />\n      </div>\n    )\n  }\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}