{"ast":null,"code":"var _jsxFileName = \"/Users/alpcan/Desktop/vscode-workspace/reactjs_practice/working-diary/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport $ from 'jquery';\nimport { nanoid } from 'nanoid';\nimport Search from './components/Search';\nimport DiaryList from './components/DiaryList';\nimport AddWorkingDiary from './components/AddWorkingDiary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [workingDairies, setWorkingDiaries] = useState([]);\n  const [lookingOnDate, setLookingOnDate] = useState('');\n  const [searchText, setSearchText] = useState('');\n  const [timePeriodList] = useState({\n    0: \"00:00 - 01:00\",\n    1: \"01:00 - 02:00\",\n    2: \"02:00 - 03:00\",\n    3: \"03:00 - 04:00\",\n    4: \"04:00 - 05:00\",\n    5: \"05:00 - 06:00\",\n    6: \"06:00 - 07:00\",\n    7: \"07:00 - 08:00\",\n    8: \"08:00 - 09:00\",\n    9: \"09:00 - 10:00\",\n    10: \"10:00 - 11:00\",\n    11: \"11:00 - 12:00\",\n    12: \"12:00 - 13:00\",\n    13: \"13:00 - 14:00\",\n    14: \"14:00 - 15:00\",\n    15: \"15:00 - 16:00\",\n    16: \"16:00 - 17:00\",\n    17: \"17:00 - 18:00\",\n    18: \"18:00 - 19:00\",\n    19: \"19:00 - 20:00\",\n    20: \"20:00 - 21:00\",\n    21: \"21:00 - 22:00\",\n    22: \"22:00 - 23:00\",\n    23: \"23:00 - 00:00\"\n  }); // $.getJSON(\"localhost:8080/getDiaries\",function (data){\n  //   this.setState({\n  //     workingDairies : data\n  //   })\n  // });\n\n  const fetchDatas = () => {\n    fetch(\"http://localhost:8080/getDiaries\", {\n      mode: 'cors'\n    }).then(response => {\n      var pulledData = response.json();\n      console.log(pulledData);\n      setWorkingDiaries(pulledData);\n      return pulledData;\n    });\n    console.log($('.date').val());\n  };\n\n  const pageOnLoad = () => {//fetchDatas();\n  };\n\n  document.getElementsByTagName(\"body\")[0].addEventListener(\"onload\", pageOnLoad);\n\n  const handleAddWorkingDairy = (header, date) => {\n    const formattedDate = new Date(date).toLocaleDateString();\n    const newWorkingDairy = {\n      id: nanoid(),\n      header: header,\n      date: formattedDate,\n      workingPieces: []\n    };\n    const newWorkingDiaries = [...workingDairies, newWorkingDairy];\n    setWorkingDiaries(newWorkingDiaries);\n  };\n\n  const handleDeleteWorkingDiary = id => {\n    const newWorkinDiary = workingDairies.filter(workingDairy => id !== workingDairy.id);\n    setWorkingDiaries(newWorkinDiary);\n  };\n\n  chooseDate = date => {\n    setLookingOnDate(new Date(date).toLocaleDateString());\n  }; // const chooseDate = () =>{\n  //   var date = new Date($('.date').val());\n  //   var formattedDate = date.toLocaleDateString();\n  //   setLookingOnDate({\n  //     lookingOnDate : formattedDate\n  //   })\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center mt-4\",\n        children: \"CHOOSE A DAY AND SEARCH WITH KEYWORDS IN YOUR DAILIES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      chooseDate: chooseDate,\n      handleSearchDaily: setSearchText,\n      lookingOnDate: lookingOnDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-diary row mt-4 justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-diary-button\",\n        className: \"btn btn-primary\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#addDaily\",\n        toggle: \"modal\",\n        type: \"button\",\n        children: \"Yeni Bir G\\xFCn Ekle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      workingDairies: workingDairies // {\n      //   workingDairies.filter((workingDairy) => workingDairy.header.toLowerCase().includes(searchText.toLowerCase() || workingDairy.date === lookingOnDate)\n      //     )}\n      ,\n      handleAddWorkingDairy: handleAddWorkingDairy,\n      handleDeleteWorkingDay: handleDeleteWorkingDiary,\n      timePeriodList: timePeriodList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(AddWorkingDiary, {\n      handleAddWorkingDairy: handleAddWorkingDairy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"jjGcyFa9pSrCBOkW4NSjJ19oP0k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alpcan/Desktop/vscode-workspace/reactjs_practice/working-diary/src/App.js"],"names":["React","useState","$","nanoid","Search","DiaryList","AddWorkingDiary","App","workingDairies","setWorkingDiaries","lookingOnDate","setLookingOnDate","searchText","setSearchText","timePeriodList","fetchDatas","fetch","mode","then","response","pulledData","json","console","log","val","pageOnLoad","document","getElementsByTagName","addEventListener","handleAddWorkingDairy","header","date","formattedDate","Date","toLocaleDateString","newWorkingDairy","id","workingPieces","newWorkingDiaries","handleDeleteWorkingDiary","newWorkinDiary","filter","workingDairy","chooseDate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;;;AAOA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAGhB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;AAEA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,cAAD,IAAmBb,QAAQ,CAC/B;AACE,OAAG,eADL;AAEE,OAAG,eAFL;AAGE,OAAG,eAHL;AAIE,OAAG,eAJL;AAKE,OAAG,eALL;AAME,OAAG,eANL;AAOE,OAAG,eAPL;AAQE,OAAG,eARL;AASE,OAAG,eATL;AAUE,OAAG,eAVL;AAWE,QAAI,eAXN;AAYE,QAAI,eAZN;AAaE,QAAI,eAbN;AAcE,QAAI,eAdN;AAeE,QAAI,eAfN;AAgBE,QAAI,eAhBN;AAiBE,QAAI,eAjBN;AAkBE,QAAI,eAlBN;AAmBE,QAAI,eAnBN;AAoBE,QAAI,eApBN;AAqBE,QAAI,eArBN;AAsBE,QAAI,eAtBN;AAuBE,QAAI,eAvBN;AAwBE,QAAI;AAxBN,GAD+B,CAAjC,CAPgB,CAqChB;AACA;AACA;AACA;AACA;;AAEA,QAAMc,UAAU,GAAG,MAAM;AAEvBC,IAAAA,KAAK,CAAC,kCAAD,EAAoC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAApC,CAAL,CACCC,IADD,CACOC,QAAD,IAAc;AAClB,UAAIC,UAAU,GAAGD,QAAQ,CAACE,IAAT,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACAX,MAAAA,iBAAiB,CAACW,UAAD,CAAjB;AACA,aAAOA,UAAP;AAAkB,KALpB;AAMAE,IAAAA,OAAO,CAACC,GAAR,CAAYrB,CAAC,CAAC,OAAD,CAAD,CAAWsB,GAAX,EAAZ;AAED,GAVD;;AAYA,QAAMC,UAAU,GAAG,MAAK,CAEtB;AAED,GAJD;;AAMAC,EAAAA,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,gBAAzC,CAA0D,QAA1D,EAAmEH,UAAnE;;AAEA,QAAMI,qBAAqB,GAAG,CAACC,MAAD,EAAQC,IAAR,KAAiB;AAC7C,UAAMC,aAAa,GAAG,IAAIC,IAAJ,CAASF,IAAT,EAAeG,kBAAf,EAAtB;AACA,UAAMC,eAAe,GAAG;AACtBC,MAAAA,EAAE,EAAEjC,MAAM,EADY;AAEtB2B,MAAAA,MAAM,EAAEA,MAFc;AAGtBC,MAAAA,IAAI,EAAEC,aAHgB;AAItBK,MAAAA,aAAa,EAAE;AAJO,KAAxB;AAMA,UAAMC,iBAAiB,GAAG,CAAC,GAAG9B,cAAJ,EAAoB2B,eAApB,CAA1B;AACA1B,IAAAA,iBAAiB,CAAC6B,iBAAD,CAAjB;AACD,GAVD;;AAaA,QAAMC,wBAAwB,GAAIH,EAAD,IAAQ;AAEvC,UAAMI,cAAc,GAAGhC,cAAc,CAACiC,MAAf,CAAuBC,YAAD,IAAkBN,EAAE,KAAKM,YAAY,CAACN,EAA5D,CAAvB;AACA3B,IAAAA,iBAAiB,CAAC+B,cAAD,CAAjB;AAED,GALD;;AAOAG,EAAAA,UAAU,GAAIZ,IAAD,IAAU;AAErBpB,IAAAA,gBAAgB,CAAC,IAAIsB,IAAJ,CAASF,IAAT,EAAeG,kBAAf,EAAD,CAAhB;AACD,GAHD,CAnFgB,CAwFhB;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAII,QAAC,MAAD;AACI,MAAA,UAAU,EAAIS,UADlB;AAEI,MAAA,iBAAiB,EAAI9B,aAFzB;AAGI,MAAA,aAAa,EAAIH;AAHrB;AAAA;AAAA;AAAA;AAAA,YAJJ,eASI;AAAK,MAAA,SAAS,EAAC,2CAAf;AAAA,6BACE;AAAQ,QAAA,EAAE,EAAC,kBAAX;AAA8B,QAAA,SAAS,EAAC,iBAAxC;AAA0D,uBAAY,OAAtE;AAA8E,uBAAY,WAA1F;AAAsG,QAAA,MAAM,EAAC,OAA7G;AAAqH,QAAA,IAAI,EAAC,QAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATJ,eAYI,QAAC,SAAD;AACI,MAAA,cAAc,EAAIF,cADtB,CAEI;AACA;AACA;AAJJ;AAKI,MAAA,qBAAqB,EAAIqB,qBAL7B;AAMI,MAAA,sBAAsB,EAAIU,wBAN9B;AAOI,MAAA,cAAc,EAAIzB;AAPtB;AAAA;AAAA;AAAA;AAAA,YAZJ,eAsBI,QAAC,eAAD;AACE,MAAA,qBAAqB,EAAIe;AAD3B;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAjIH;;GAAMtB,G;;KAAAA,G;AAqIN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport $ from 'jquery';\nimport {nanoid} from 'nanoid';\nimport Search from './components/Search';\nimport DiaryList from './components/DiaryList';\nimport AddWorkingDiary from './components/AddWorkingDiary';\n\n\n  \n\n \n\nconst App = () => {\n\n  \n  const [workingDairies, setWorkingDiaries] = useState([]);\n  \n  const [lookingOnDate, setLookingOnDate] = useState('')\n  const [searchText, setSearchText] = useState('');\n  const [timePeriodList] = useState(\n    {\n      0: \"00:00 - 01:00\",\n      1: \"01:00 - 02:00\",\n      2: \"02:00 - 03:00\",\n      3: \"03:00 - 04:00\",\n      4: \"04:00 - 05:00\",\n      5: \"05:00 - 06:00\",\n      6: \"06:00 - 07:00\",\n      7: \"07:00 - 08:00\",\n      8: \"08:00 - 09:00\",\n      9: \"09:00 - 10:00\",\n      10: \"10:00 - 11:00\",\n      11: \"11:00 - 12:00\",\n      12: \"12:00 - 13:00\",\n      13: \"13:00 - 14:00\",\n      14: \"14:00 - 15:00\",\n      15: \"15:00 - 16:00\",\n      16: \"16:00 - 17:00\",\n      17: \"17:00 - 18:00\",\n      18: \"18:00 - 19:00\",\n      19: \"19:00 - 20:00\",\n      20: \"20:00 - 21:00\",\n      21: \"21:00 - 22:00\",\n      22: \"22:00 - 23:00\",\n      23: \"23:00 - 00:00\"\n    }\n  );\n\n\n  // $.getJSON(\"localhost:8080/getDiaries\",function (data){\n  //   this.setState({\n  //     workingDairies : data\n  //   })\n  // });\n\n  const fetchDatas = () => {\n\n    fetch(\"http://localhost:8080/getDiaries\",{ mode: 'cors' })\n    .then((response) => { \n      var pulledData = response.json();\n      console.log(pulledData);\n      setWorkingDiaries(pulledData);\n      return pulledData})\n    console.log($('.date').val());\n\n  }\n\n  const pageOnLoad = () =>{\n\n    //fetchDatas();\n\n  }\n\n  document.getElementsByTagName(\"body\")[0].addEventListener(\"onload\",pageOnLoad);\n\n  const handleAddWorkingDairy = (header,date) => {\n    const formattedDate = new Date(date).toLocaleDateString();\n    const newWorkingDairy = {\n      id: nanoid(),\n      header: header,\n      date: formattedDate,\n      workingPieces: []\n    }\n    const newWorkingDiaries = [...workingDairies, newWorkingDairy];\n    setWorkingDiaries(newWorkingDiaries);    \n  }\n\n  \n  const handleDeleteWorkingDiary = (id) => {\n\n    const newWorkinDiary = workingDairies.filter((workingDairy) => id !== workingDairy.id);\n    setWorkingDiaries(newWorkinDiary);\n\n  }\n\n  chooseDate = (date) => {\n\n    setLookingOnDate(new Date(date).toLocaleDateString());\n  }\n  \n  // const chooseDate = () =>{\n  //   var date = new Date($('.date').val());\n  //   var formattedDate = date.toLocaleDateString();\n\n  //   setLookingOnDate({\n  //     lookingOnDate : formattedDate\n  //   })\n  // }\n\n  \n    return (\n      <div className=\"container\">\n      <div className=\"header\">\n        <h3 className=\"text-center mt-4\">CHOOSE A DAY AND SEARCH WITH KEYWORDS IN YOUR DAILIES</h3>\n      </div>\n          <Search \n              chooseDate = {chooseDate}\n              handleSearchDaily = {setSearchText}\n              lookingOnDate = {lookingOnDate}\n          />\n          <div className=\"add-diary row mt-4 justify-content-center\">\n            <button id=\"new-diary-button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#addDaily\" toggle=\"modal\" type=\"button\" >Yeni Bir Gün Ekle</button>\n          </div>  \n          <DiaryList \n              workingDairies = {workingDairies}\n              // {\n              //   workingDairies.filter((workingDairy) => workingDairy.header.toLowerCase().includes(searchText.toLowerCase() || workingDairy.date === lookingOnDate)\n              //     )}\n              handleAddWorkingDairy = {handleAddWorkingDairy}\n              handleDeleteWorkingDay = {handleDeleteWorkingDiary}\n              timePeriodList = {timePeriodList}\n          />\n          \n          <AddWorkingDiary\n            handleAddWorkingDairy = {handleAddWorkingDairy}\n            /> \n\n          \n\n      </div>\n    )\n  }\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}