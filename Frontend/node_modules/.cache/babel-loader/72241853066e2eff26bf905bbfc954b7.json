{"ast":null,"code":"var _jsxFileName = \"/Users/alpcan/Desktop/vscode-workspace/reactjs_practice/working-diary/src/components/WorkDay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AddWorkingPiece from './AddWorkingPiece';\nimport WorkPiece from './WorkPiece';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WorkDay = ({\n  id,\n  header,\n  date,\n  handleDeleteWorkingDay,\n  timePeriodList\n}) => {\n  _s();\n\n  const [isVisible, setIsVisible] = useState(false);\n  const [workingPieces, setWorkingPieces] = useState([]);\n\n  const handleAddWorkingPiece = (header, context, timePeriod) => {\n    const inheritedDate = date;\n    const newWorkingPiece = {\n      id: nanoid(),\n      header: header,\n      context: context,\n      timePeriod: timePeriod,\n      date: inheritedDate\n    };\n    const newWorkingPieces = [...workingPieces, newWorkingPiece];\n    setWorkingPieces(newWorkingPieces);\n  };\n\n  const handleDeleteWorkingPiece = id => {\n    const newWorkingPieces = workingPieces.filter(workingPiece => id !== workingPiece.id);\n    setWorkingPieces(newWorkingPieces);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: id,\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            id: \"header\",\n            className: \"d-inline\",\n            style: {\n              cursor: \"pointer\"\n            },\n            onClick: setIsVisible(!isVisible),\n            children: header\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: handleDeleteWorkingDay(id),\n            className: \"far fa-trash-alt\",\n            style: {\n              cursor: \"pointer\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"workingDiaryDate\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"new-working-piece-button\",\n            className: \"btn btn-primary\",\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#addWorkingPiece\",\n            toggle: \"modal\",\n            type: \"button\",\n            children: \"Yeni Bir \\u0130\\u015F Par\\xE7as\\u0131 Ekle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 14\n  }, this);\n};\n\n_s(WorkDay, \"3f2mQ/SPAFUVhVYe+V4vQjr9UH8=\");\n\n_c = WorkDay;\nexport default WorkDay;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkDay\");","map":{"version":3,"sources":["/Users/alpcan/Desktop/vscode-workspace/reactjs_practice/working-diary/src/components/WorkDay.js"],"names":["React","useState","AddWorkingPiece","WorkPiece","nanoid","WorkDay","id","header","date","handleDeleteWorkingDay","timePeriodList","isVisible","setIsVisible","workingPieces","setWorkingPieces","handleAddWorkingPiece","context","timePeriod","inheritedDate","newWorkingPiece","newWorkingPieces","handleDeleteWorkingPiece","filter","workingPiece","cursor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,MAAR,QAAqB,QAArB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAIC,EAAAA,MAAJ;AAAWC,EAAAA,IAAX;AAAiBC,EAAAA,sBAAjB;AAAwCC,EAAAA;AAAxC,CAAD,KAA6D;AAAA;;AAGzE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMc,qBAAqB,GAAG,CAACR,MAAD,EAAQS,OAAR,EAAgBC,UAAhB,KAA+B;AAEzD,UAAMC,aAAa,GAAGV,IAAtB;AACA,UAAMW,eAAe,GAAG;AACtBb,MAAAA,EAAE,EAAEF,MAAM,EADY;AAEtBG,MAAAA,MAAM,EAAEA,MAFc;AAGtBS,MAAAA,OAAO,EAAEA,OAHa;AAItBC,MAAAA,UAAU,EAAGA,UAJS;AAKtBT,MAAAA,IAAI,EAAEU;AALgB,KAAxB;AAOA,UAAME,gBAAgB,GAAG,CAAC,GAAGP,aAAJ,EAAmBM,eAAnB,CAAzB;AACAL,IAAAA,gBAAgB,CAACM,gBAAD,CAAhB;AACD,GAZH;;AAcE,QAAMC,wBAAwB,GAAIf,EAAD,IAAQ;AAEvC,UAAMc,gBAAgB,GAAGP,aAAa,CAACS,MAAd,CAAsBC,YAAD,IAAkBjB,EAAE,KAAKiB,YAAY,CAACjB,EAA3D,CAAzB;AACAQ,IAAAA,gBAAgB,CAACM,gBAAD,CAAhB;AAED,GALD;;AAOE,sBAEK;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACO;AAAK,MAAA,EAAE,EAAEd,EAAT;AAAa,MAAA,SAAS,EAAC,MAAvB;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAC,4CAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAI,YAAA,EAAE,EAAC,QAAP;AAAgB,YAAA,SAAS,EAAC,UAA1B;AAAqC,YAAA,KAAK,EAAE;AAACkB,cAAAA,MAAM,EAAC;AAAR,aAA5C;AAAgE,YAAA,OAAO,EAAEZ,YAAY,CAAC,CAACD,SAAF,CAArF;AAAA,sBAAoGJ;AAApG;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAG,YAAA,OAAO,EAAIE,sBAAsB,CAACH,EAAD,CAApC;AAA0C,YAAA,SAAS,EAAC,kBAApD;AAAuE,YAAA,KAAK,EAAI;AAACkB,cAAAA,MAAM,EAAC;AAAR;AAAhF;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAO,YAAA,EAAE,EAAC,kBAAV;AAAA,sBAA+BhB;AAA/B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,EAAE,EAAC,0BAAX;AAAsC,YAAA,SAAS,EAAC,iBAAhD;AAAkE,2BAAY,OAA9E;AAAsF,2BAAY,kBAAlG;AAAqH,YAAA,MAAM,EAAC,OAA5H;AAAoI,YAAA,IAAI,EAAC,QAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADP;AAAA;AAAA;AAAA;AAAA,UAFL;AAwCH,CAnEL;;GAAMH,O;;KAAAA,O;AAoEN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport AddWorkingPiece from './AddWorkingPiece';\nimport WorkPiece from './WorkPiece';\nimport {nanoid} from 'nanoid';\n\nconst WorkDay = ({id,header,date, handleDeleteWorkingDay,timePeriodList}) => {\n\n\n    const [isVisible, setIsVisible] = useState(false);\n    const [workingPieces, setWorkingPieces] = useState([]);\n\n    const handleAddWorkingPiece = (header,context,timePeriod) => {\n    \n        const inheritedDate = date;\n        const newWorkingPiece = {\n          id: nanoid(),\n          header: header,\n          context: context,\n          timePeriod : timePeriod,\n          date: inheritedDate,\n        }\n        const newWorkingPieces = [...workingPieces, newWorkingPiece];\n        setWorkingPieces(newWorkingPieces);\n      }\n    \n      const handleDeleteWorkingPiece = (id) => {\n        \n        const newWorkingPieces = workingPieces.filter((workingPiece) => id !== workingPiece.id);\n        setWorkingPieces(newWorkingPieces);\n    \n      }\n\n        return (\n\n             <div className=\"row mt-4\">\n                    <div id={id} className=\"card\">\n                    \n                        <div className=\"card-header d-flex justify-content-between\">\n                            <div className=\"row\">\n                                <h5 id=\"header\" className=\"d-inline\" style={{cursor:\"pointer\"}} onClick={setIsVisible(!isVisible)}>{header}</h5>\n                                <i onClick = {handleDeleteWorkingDay(id)} className=\"far fa-trash-alt\" style = {{cursor:\"pointer\"}}></i>\n                            </div>\n                            <div className=\"row\">\n                                <label id=\"workingDiaryDate\" >{date}</label>\n                                <button id=\"new-working-piece-button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#addWorkingPiece\" toggle=\"modal\" type=\"button\" >Yeni Bir İş Parçası Ekle</button>\n                            </div>\n                       </div>\n                        {/* {\n                        isVisible ? \n                        <div className=\"card-body\">\n                                {workingPieces.map((workingPiece) => (\n                                    <WorkPiece\n                                        id = {workingPiece.id}\n                                        header ={workingPiece.header}\n                                        context = {workingPiece.context}\n                                        date = {workingPiece.date}\n                                        timePeriod = {workingPiece.timePeriod}\n                                        handleDeleteWorkingPiece = {handleDeleteWorkingPiece}\n                                        handleAddWorkingPiece = {handleAddWorkingPiece}\n                                    />\n                                ))} \n                        \n                        </div> : null\n                        }\n                        <AddWorkingPiece \n                            timePeriodList = {timePeriodList}\n                            belongerId = {id}\n                        /> */}\n                    </div>\n            </div>\n            \n        )\n    }\nexport default WorkDay;"]},"metadata":{},"sourceType":"module"}