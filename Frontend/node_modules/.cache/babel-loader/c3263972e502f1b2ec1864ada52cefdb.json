{"ast":null,"code":"var _jsxFileName = \"/Users/alpcan/Desktop/vscode-workspace/reactjs_practice/working-diary/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport $ from 'jquery';\nimport { nanoid } from 'nanoid';\nimport Search from './components/Search';\nimport DiaryList from './components/DiaryList';\nimport AddWorkingDiary from './components/AddWorkingDiary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [workingDiaries, setWorkingDiaries] = useState([]);\n  const [lookingOnDate, setLookingOnDate] = useState('');\n  const [searchText, setSearchText] = useState('');\n  const [isWorkingDayVisible, setIsWorkingDayVisible] = useState(false);\n  const [timePeriodList] = useState({\n    0: \"00:00 - 01:00\",\n    1: \"01:00 - 02:00\",\n    2: \"02:00 - 03:00\",\n    3: \"03:00 - 04:00\",\n    4: \"04:00 - 05:00\",\n    5: \"05:00 - 06:00\",\n    6: \"06:00 - 07:00\",\n    7: \"07:00 - 08:00\",\n    8: \"08:00 - 09:00\",\n    9: \"09:00 - 10:00\",\n    10: \"10:00 - 11:00\",\n    11: \"11:00 - 12:00\",\n    12: \"12:00 - 13:00\",\n    13: \"13:00 - 14:00\",\n    14: \"14:00 - 15:00\",\n    15: \"15:00 - 16:00\",\n    16: \"16:00 - 17:00\",\n    17: \"17:00 - 18:00\",\n    18: \"18:00 - 19:00\",\n    19: \"19:00 - 20:00\",\n    20: \"20:00 - 21:00\",\n    21: \"21:00 - 22:00\",\n    22: \"22:00 - 23:00\",\n    23: \"23:00 - 00:00\"\n  });\n\n  const setWorkingDayVisibility = () => {\n    setIsWorkingDayVisible(true);\n  };\n\n  const handleAddWorkingPiece = (belongerId, inheritedDate, header, context, timePeriod, workingPieces) => {\n    const belongerWorkingDiary = workingDiaries.filter(workingDiary => workingDiary.id === belongerId);\n    const newWorkingPiece = {\n      id: nanoid(),\n      header: header,\n      context: context,\n      timePeriod: timePeriod,\n      date: inheritedDate\n    };\n    workingPieces = [...workingPieces, newWorkingPiece];\n    belongerWorkingDiary.workingPieces = workingPieces;\n  };\n\n  const handleDeleteWorkingPiece = (belongerId, workingPieces) => {\n    workingPieces = workingPieces.filter(workingPiece => belongerId !== workingPiece.id);\n    const belongerWorkingDiary = workingDiaries.filter(workingDiary => workingDiary.id === belongerId);\n    belongerWorkingDiary.workingPieces = workingPieces;\n  }; // const fetchDatas = () => {\n  //  $.getJSON(\"localhost:8080/getDiaries\",function (data){\n  //   setWorkingDiaries(JSON.parse(data));\n  //   });\n  // }\n\n\n  $(function () {\n    if (!$.cookie(\"fetch\")) {\n      fetch('http://localhost:8080/getDiaries', {\n        mode: 'cors'\n      }).then(response => response.json()).then(data => setWorkingDiaries(data));\n      console.log(\"Page load\");\n      $.cookie(\"ge\", \"firstSet\", {\n        \"path\": \"/\",\n        \"expires\": 7\n      });\n    } // fetch(\"http://localhost:8080/getDiaries\",{ mode: 'cors' })\n    // .then(function (response){\n    //   // setWorkingDiaries([JSON.parse(response)]);\n    //   return response.json();\n    // })\n\n  }); // document.getElementsByTagName(\"body\")[0].addEventListener(\"onload\",pageOnLoad);\n\n  const postData = data => {\n    var settings = {\n      \"url\": \"localhost:8080/saveWorkDay\",\n      \"method\": \"POST\",\n      \"timeout\": 0,\n      \"headers\": {\n        \"Content-Type\": \"application/json\"\n      },\n      \"data\": JSON.stringify(data)\n    };\n    $.ajax(settings).done(function (response) {\n      alert(\"KayÄ±t\" + response);\n    });\n  };\n\n  const handleAddWorkingDiary = (header, date) => {\n    const formattedDate = new Date(date).toLocaleDateString();\n    const newWorkingDiary = {\n      id: nanoid(),\n      header: header,\n      date: formattedDate,\n      workingPieces: []\n    };\n    const newWorkingDiaries = [...workingDiaries, newWorkingDiary];\n    setWorkingDiaries(newWorkingDiaries);\n    postData(newWorkingDiary);\n  };\n\n  const handleDeleteWorkingDiary = id => {\n    const newWorkinDiary = workingDiaries.filter(workingDiary => id !== workingDiary.id);\n    setWorkingDiaries(newWorkinDiary);\n  };\n\n  const chooseDate = date => {\n    setLookingOnDate(new Date(date).toLocaleDateString());\n  };\n\n  const handleSearchDiary = searchText => {\n    setSearchText(searchText);\n  }; // const chooseDate = () =>{\n  //   var date = new Date($('.date').val());\n  //   var formattedDate = date.toLocaleDateString();\n  //   setLookingOnDate({\n  //     lookingOnDate : formattedDate\n  //   })\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"app-header\",\n        className: \"text-center mt-4\",\n        children: \"EFFORT MASTER'A HO\\u015EGELD\\u0130N\\u0130Z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      chooseDate: chooseDate,\n      handleSearchDiary: handleSearchDiary,\n      searchText: searchText,\n      lookingOnDate: lookingOnDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-diary row mt-4 justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-diary-button\",\n        className: \"btn btn-primary\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#addDiary\",\n        toggle: \"modal\",\n        type: \"button\",\n        children: \"Yeni Bir G\\xFCn Ekle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      workingDiaries: workingDiaries,\n      workingPieces: workingDiaries.workingPieces,\n      timePeriodList: timePeriodList,\n      isWorkingDayVisible: isWorkingDayVisible,\n      handleDeleteWorkingDiary: handleDeleteWorkingDiary,\n      handleAddWorkingPiece: handleAddWorkingPiece,\n      handleDeleteWorkingPiece: handleDeleteWorkingPiece,\n      setWorkingDayVisibility: setWorkingDayVisibility\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddWorkingDiary, {\n      handleAddWorkingDiary: handleAddWorkingDiary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"5tN51/+182molKxfhX2H+Hj0Q80=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alpcan/Desktop/vscode-workspace/reactjs_practice/working-diary/src/App.js"],"names":["React","useState","$","nanoid","Search","DiaryList","AddWorkingDiary","App","workingDiaries","setWorkingDiaries","lookingOnDate","setLookingOnDate","searchText","setSearchText","isWorkingDayVisible","setIsWorkingDayVisible","timePeriodList","setWorkingDayVisibility","handleAddWorkingPiece","belongerId","inheritedDate","header","context","timePeriod","workingPieces","belongerWorkingDiary","filter","workingDiary","id","newWorkingPiece","date","handleDeleteWorkingPiece","workingPiece","cookie","fetch","mode","then","response","json","data","console","log","postData","settings","JSON","stringify","ajax","done","alert","handleAddWorkingDiary","formattedDate","Date","toLocaleDateString","newWorkingDiary","newWorkingDiaries","handleDeleteWorkingDiary","newWorkinDiary","chooseDate","handleSearchDiary"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport $ from 'jquery';\nimport {nanoid} from 'nanoid';\nimport Search from './components/Search';\nimport DiaryList from './components/DiaryList';\nimport AddWorkingDiary from './components/AddWorkingDiary';\n\n\n  \n\n \n\nconst App = () => {\n\n  \n  const [workingDiaries, setWorkingDiaries] = useState([\n    \n  ]);\n\n  const [lookingOnDate, setLookingOnDate] = useState('')\n  const [searchText, setSearchText] = useState('');\n  const [isWorkingDayVisible, setIsWorkingDayVisible] = useState(false);\n  const [timePeriodList] = useState(\n    {\n      0: \"00:00 - 01:00\",\n      1: \"01:00 - 02:00\",\n      2: \"02:00 - 03:00\",\n      3: \"03:00 - 04:00\",\n      4: \"04:00 - 05:00\",\n      5: \"05:00 - 06:00\",\n      6: \"06:00 - 07:00\",\n      7: \"07:00 - 08:00\",\n      8: \"08:00 - 09:00\",\n      9: \"09:00 - 10:00\",\n      10: \"10:00 - 11:00\",\n      11: \"11:00 - 12:00\",\n      12: \"12:00 - 13:00\",\n      13: \"13:00 - 14:00\",\n      14: \"14:00 - 15:00\",\n      15: \"15:00 - 16:00\",\n      16: \"16:00 - 17:00\",\n      17: \"17:00 - 18:00\",\n      18: \"18:00 - 19:00\",\n      19: \"19:00 - 20:00\",\n      20: \"20:00 - 21:00\",\n      21: \"21:00 - 22:00\",\n      22: \"22:00 - 23:00\",\n      23: \"23:00 - 00:00\"\n    }\n  );\n  const setWorkingDayVisibility = () => {\n    setIsWorkingDayVisible(true);\n  } \n  \n\n  const handleAddWorkingPiece = (belongerId,inheritedDate,header,context,timePeriod,workingPieces) => {\n    \n    const belongerWorkingDiary = workingDiaries.filter((workingDiary) => workingDiary.id === belongerId);\n    \n    const newWorkingPiece = {\n      id: nanoid(),\n      header: header,\n      context: context,\n      timePeriod : timePeriod,\n      date: inheritedDate,\n    }\n    workingPieces = [...workingPieces, newWorkingPiece];\n    belongerWorkingDiary.workingPieces = workingPieces;\n  }\n\n  const handleDeleteWorkingPiece = (belongerId,workingPieces) => {\n    \n    workingPieces = workingPieces.filter((workingPiece) => belongerId !== workingPiece.id);\n    const belongerWorkingDiary = workingDiaries.filter((workingDiary) => workingDiary.id === belongerId);\n    belongerWorkingDiary.workingPieces = workingPieces;\n\n  }\n  \n  // const fetchDatas = () => {\n  //  $.getJSON(\"localhost:8080/getDiaries\",function (data){\n  //   setWorkingDiaries(JSON.parse(data));\n  //   });\n  // }\n\n  $(function() {\n\n    if(!$.cookie(\"fetch\")){\n      \n      fetch('http://localhost:8080/getDiaries',{ mode: 'cors' })\n      .then(response => response.json())\n      .then(data => setWorkingDiaries(data));\n      \n    \n      console.log(\"Page load\")\n      $.cookie(\"ge\", \"firstSet\", {\"path\": \"/\",\"expires\" : 7})\n   }\n    \n    // fetch(\"http://localhost:8080/getDiaries\",{ mode: 'cors' })\n    // .then(function (response){\n      \n    //   // setWorkingDiaries([JSON.parse(response)]);\n \n    //   return response.json();\n    // })\n\n   });\n\n\n\n  // document.getElementsByTagName(\"body\")[0].addEventListener(\"onload\",pageOnLoad);\n  const postData = (data) => { \n    var settings = {\n    \"url\": \"localhost:8080/saveWorkDay\",\n    \"method\": \"POST\",\n    \"timeout\": 0,\n    \"headers\": {\n      \"Content-Type\": \"application/json\"\n    },\n    \"data\": JSON.stringify(data),\n  };\n  \n  $.ajax(settings).done(function (response) {\n    alert(\"KayÄ±t\"+response);\n  });\n  }\n\n  const handleAddWorkingDiary = (header,date) => {\n    const formattedDate = new Date(date).toLocaleDateString();\n    const newWorkingDiary = {\n      id: nanoid(),\n      header: header,\n      date: formattedDate,\n      workingPieces: []\n    }\n    const newWorkingDiaries = [...workingDiaries, newWorkingDiary];\n    setWorkingDiaries(newWorkingDiaries);\n    postData(newWorkingDiary); \n  }\n\n  \n  const handleDeleteWorkingDiary = (id) => {\n\n    const newWorkinDiary = workingDiaries.filter((workingDiary) => id !== workingDiary.id);\n    setWorkingDiaries(newWorkinDiary);\n\n  }\n\n  const chooseDate = (date) => {\n\n    setLookingOnDate(new Date(date).toLocaleDateString());\n  }\n  const handleSearchDiary = (searchText) => {\n\n    setSearchText(searchText);\n\n  }\n  // const chooseDate = () =>{\n  //   var date = new Date($('.date').val());\n  //   var formattedDate = date.toLocaleDateString();\n\n  //   setLookingOnDate({\n  //     lookingOnDate : formattedDate\n  //   })\n  // }\n\n  \n    return (\n      <div className=\"container\" >\n        <div className=\"header\">\n          <h3 id=\"app-header\" className=\"text-center mt-4\">EFFORT MASTER'A HOÅGELDÄ°NÄ°Z</h3>\n        </div>\n            <Search \n                chooseDate = {chooseDate}\n                handleSearchDiary = {handleSearchDiary}\n                searchText = {searchText}\n                lookingOnDate = {lookingOnDate}\n            />\n            <div className=\"add-diary row mt-4 justify-content-center\">\n              <button id=\"new-diary-button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#addDiary\" toggle=\"modal\" type=\"button\" >Yeni Bir GÃ¼n Ekle</button>\n            </div>  \n            <DiaryList\n\n                workingDiaries = {workingDiaries}\n                workingPieces = {workingDiaries.workingPieces}\n                timePeriodList = {timePeriodList}\n                isWorkingDayVisible = {isWorkingDayVisible}\n\n                handleDeleteWorkingDiary = {handleDeleteWorkingDiary}\n                handleAddWorkingPiece = {handleAddWorkingPiece}\n                handleDeleteWorkingPiece = {handleDeleteWorkingPiece}\n                setWorkingDayVisibility = {setWorkingDayVisibility}\n\n            />\n            \n            <AddWorkingDiary\n              handleAddWorkingDiary = {handleAddWorkingDiary}\n              /> \n\n          \n\n      </div>\n    )\n  }\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}